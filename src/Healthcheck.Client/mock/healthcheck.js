module.exports = {
  'GET /sitecore/api/ssc/healthcheck/get': function (req, res) {
    res.json(
      [{"GroupName":"API","Components":[{"ErrorCount":0,"Status":"","Name":"DPAS Api","Id":"{F786904F-800D-4078-A337-E3095EE2B221}","HealthyMessage":"","LastCheckTime":"0001-01-01T00:00:00","ErrorList":{"Entries":[]}}]},{"GroupName":"Certificates","Components":[{"ErrorCount":14,"Status":"Warning","Name":"Certificate Check","Id":"{F4B6CC85-7AC4-448F-9694-4A258469ED55}","HealthyMessage":"Expiration: 16/02/2022","LastCheckTime":"2020-03-23T14:46:32","ErrorList":{"Entries":[{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate will experience in 694 days","Created":"2020-03-23T14:29:25.0919019Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate expired","Created":"2020-03-23T14:29:25.0929037Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate will experience in 694 days","Created":"2020-03-23T14:29:27.7230391Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate expired","Created":"2020-03-23T14:29:27.7230391Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate will experience in 694 days","Created":"2020-03-23T14:29:28.9132546Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate expired","Created":"2020-03-23T14:29:28.9132546Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate will experience in 694 days","Created":"2020-03-23T14:29:31.204188Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate expired","Created":"2020-03-23T14:29:31.204188Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate will experience in 694 days","Created":"2020-03-23T14:29:34.1710973Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate expired","Created":"2020-03-23T14:29:34.1710973Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate will experience in 694 days","Created":"2020-03-23T14:39:15.9515246Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate will experience in 694 days","Created":"2020-03-23T14:42:17.0760045Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate will experience in 694 days","Created":"2020-03-23T14:43:33.1328624Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate will experience in 694 days","Created":"2020-03-23T14:46:32.52819Z","Exception":null}]}},{"ErrorCount":14,"Status":"Error","Name":"Invalid","Id":"{949C0405-77AC-47DB-83CE-C22CD86A6C43}","HealthyMessage":"Expiration: 16/02/2022","LastCheckTime":"2020-03-23T14:46:32","ErrorList":{"Entries":[{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate will experience in 694 days","Created":"2020-03-23T14:29:25.0919019Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate expired","Created":"2020-03-23T14:29:25.0929037Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate will experience in 694 days","Created":"2020-03-23T14:29:27.7230391Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate expired","Created":"2020-03-23T14:29:27.7230391Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate will experience in 694 days","Created":"2020-03-23T14:29:28.9132546Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate expired","Created":"2020-03-23T14:29:28.9132546Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate will experience in 694 days","Created":"2020-03-23T14:29:31.204188Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate expired","Created":"2020-03-23T14:29:31.204188Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate will experience in 694 days","Created":"2020-03-23T14:29:34.1710973Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate expired","Created":"2020-03-23T14:29:34.1710973Z","Exception":null},{"Reason":"58679A5C202EC1E4D8987F7590DFB031E2973315 certificate will experience in 694 days","Created":"2020-03-23T14:39:15.9515246Z","Exception":null},{"Reason":"Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index","Created":"2020-03-23T14:42:17.23707Z","Exception":{"Message":"Index was out of range. Must be non-negative and less than the size of the collection.","Data":{},"InnerException":null,"TargetSite":null,"StackTrace":"   at System.Collections.CollectionBase.System.Collections.IList.get_Item(Int32 index)\r\n   at System.Security.Cryptography.X509Certificates.X509Certificate2Collection.get_Item(Int32 index)\r\n   at Healthcheck.Service.Domain.CertificateCheck.RunHealthcheck() in C:\\git\\healthcheck\\src\\Healthcheck.Service\\Domain\\CertificateCheck.cs:line 86","HelpLink":null,"Source":"mscorlib","HResult":-2146233086}},{"Reason":"Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index","Created":"2020-03-23T14:43:35.1282229Z","Exception":{"Message":"Index was out of range. Must be non-negative and less than the size of the collection.","Data":{},"InnerException":null,"TargetSite":null,"StackTrace":"   at System.Collections.CollectionBase.System.Collections.IList.get_Item(Int32 index)\r\n   at System.Security.Cryptography.X509Certificates.X509Certificate2Collection.get_Item(Int32 index)\r\n   at Healthcheck.Service.Domain.CertificateCheck.RunHealthcheck() in C:\\git\\healthcheck\\src\\Healthcheck.Service\\Domain\\CertificateCheck.cs:line 86","HelpLink":null,"Source":"mscorlib","HResult":-2146233086}},{"Reason":"Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index","Created":"2020-03-23T14:46:32.5959047Z","Exception":{"Message":"Index was out of range. Must be non-negative and less than the size of the collection.","Data":{},"InnerException":null,"TargetSite":null,"StackTrace":"   at System.Collections.CollectionBase.System.Collections.IList.get_Item(Int32 index)\r\n   at System.Security.Cryptography.X509Certificates.X509Certificate2Collection.get_Item(Int32 index)\r\n   at Healthcheck.Service.Domain.CertificateCheck.RunHealthcheck() in C:\\git\\healthcheck\\src\\Healthcheck.Service\\Domain\\CertificateCheck.cs:line 86","HelpLink":null,"Source":"mscorlib","HResult":-2146233086}}]}}]},{"GroupName":"Databases","Components":[{"ErrorCount":1,"Status":"Warning","Name":"empty","Id":"{87984DD1-ED49-478C-B9D3-3C66D3A28CBB}","HealthyMessage":"Database Connection is OK","LastCheckTime":"2020-03-23T14:46:32","ErrorList":{"Entries":[{"Reason":"Cannot find the connectionstring in the config","Created":"2020-03-23T14:46:32.6798725Z","Exception":null}]}},{"ErrorCount":0,"Status":"Healthy","Name":"master","Id":"{BA45DC25-C724-4297-A4D4-52EAA7A2743C}","HealthyMessage":"Database Connection is OK","LastCheckTime":"2020-03-23T14:46:32","ErrorList":{"Entries":[]}},{"ErrorCount":0,"Status":"Healthy","Name":"web","Id":"{6D02F91F-9496-4B91-94C2-3724A044583C}","HealthyMessage":"Database Connection is OK","LastCheckTime":"2020-03-23T14:46:33","ErrorList":{"Entries":[]}},{"ErrorCount":1,"Status":"Error","Name":"funddata","Id":"{70B3A8E3-FD52-4DD2-8110-927DDFDE21B8}","HealthyMessage":"Database Connection is OK","LastCheckTime":"2020-03-23T14:46:33","ErrorList":{"Entries":[{"Reason":"A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: SQL Network Interfaces, error: 26 - Error Locating Server/Instance Specified)","Created":"2020-03-23T14:46:47.6535955Z","Exception":{"Message":"A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: SQL Network Interfaces, error: 26 - Error Locating Server/Instance Specified)","Data":{"HelpLink.ProdName":"Microsoft SQL Server","HelpLink.EvtSrc":"MSSQLServer","HelpLink.EvtID":"-1","HelpLink.BaseHelpUrl":"http://go.microsoft.com/fwlink","HelpLink.LinkId":"20476"},"InnerException":null,"TargetSite":null,"StackTrace":"   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, DbConnectionPool pool, String accessToken, Boolean applyTransientFaultHandling, SqlAuthenticationProviderManager sqlAuthProviderManager)\r\n   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\r\n   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\r\n   at System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)\r\n   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)\r\n   at System.Data.SqlClient.SqlConnection.Open()\r\n   at Healthcheck.Service.Domain.DatabaseHealthCheck.RunHealthcheck() in C:\\git\\healthcheck\\src\\Healthcheck.Service\\Domain\\DatabaseHealthCheck.cs:line 53","HelpLink":null,"Source":".Net SqlClient Data Provider","HResult":-2146232060}}]}}]},{"GroupName":"Items","Components":[{"ErrorCount":0,"Status":"Healthy","Name":"Item Check","Id":"{5A63B84E-50DD-40AC-9B9B-6F3F21E15FED}","HealthyMessage":"{3B63C456-768E-4D6E-86A4-5CDBBA6D2F98} item is exists in master database, in en language","LastCheckTime":"2020-03-23T14:46:47","ErrorList":{"Entries":[]}},{"ErrorCount":1,"Status":"Error","Name":"Web","Id":"{23195579-4714-4581-B49F-293F466790DE}","HealthyMessage":"{3B63C456-768E-4D6E-86A4-5CDBBA6D2F98} item is exists in web database, in en language","LastCheckTime":"2020-03-23T14:46:47","ErrorList":{"Entries":[{"Reason":"{3B63C456-768E-4D6E-86A4-5CDBBA6D2F98} is missing from web database, in en language","Created":"2020-03-23T14:46:47.7365759Z","Exception":null}]}}]}]);
  },
  'GET /sitecore/api/ssc/healthcheck/run': function (req, res) {
    res.json([{"GroupName":"API","Components":[{"Name":"Database","ErrorCount":0,"Status":"","LastCheckTime":"0001-01-01T00:00:00","ErrorList":{"Entries":[]}}]},{"GroupName":"Certificates","Components":[]},{"GroupName":"Databases","Components":[{"ErrorCount":7,"Status":"Error","LastCheckTime":"2020-03-21T15:16:07","ErrorList":{"Entries":[{"Reason":"Missing connectionstring key","Created":"2020-03-21T14:41:20.6816244Z","Exception":null},{"Reason":"Object reference not set to an instance of an object.","Created":"2020-03-21T14:41:20.6816244Z","Exception":{"ClassName":"System.NullReferenceException","Message":"Object reference not set to an instance of an object.","Data":null,"InnerException":null,"HelpURL":null,"StackTraceString":"   at Healthcheck.Service.Domain.DatabaseHealthCheck.RunHealthcheck()","RemoteStackTraceString":null,"RemoteStackIndex":0,"ExceptionMethod":null,"HResult":-2147467261,"Source":"Healthcheck.Service","WatsonBuckets":null}},{"Reason":"Missing connectionstring key","Created":"2020-03-21T14:46:36.4661007Z","Exception":null},{"Reason":"Object reference not set to an instance of an object.","Created":"2020-03-21T14:46:36.4667677Z","Exception":{"ClassName":"System.NullReferenceException","Message":"Object reference not set to an instance of an object.","Data":null,"InnerException":null,"HelpURL":null,"StackTraceString":"   at Healthcheck.Service.Domain.DatabaseHealthCheck.RunHealthcheck()","RemoteStackTraceString":null,"RemoteStackIndex":0,"ExceptionMethod":null,"HResult":-2147467261,"Source":"Healthcheck.Service","WatsonBuckets":null}},{"Reason":"Missing connectionstring key","Created":"2020-03-21T15:11:44.0557311Z","Exception":null},{"Reason":"Object reference not set to an instance of an object.","Created":"2020-03-21T15:11:44.0567429Z","Exception":{"ClassName":"System.NullReferenceException","Message":"Object reference not set to an instance of an object.","Data":null,"InnerException":null,"HelpURL":null,"StackTraceString":"   at Healthcheck.Service.Domain.DatabaseHealthCheck.RunHealthcheck()","RemoteStackTraceString":null,"RemoteStackIndex":0,"ExceptionMethod":null,"HResult":-2147467261,"Source":"Healthcheck.Service","WatsonBuckets":null}},{"Reason":"Cannot find the connectionstring in the config","Created":"2020-03-21T15:16:07.5797798Z","Exception":null}]}},{"ErrorCount":3,"Status":"Healthy","LastCheckTime":"2020-03-21T15:16:08","ErrorList":{"Entries":[{"Reason":"Missing connectionstring key","Created":"2020-03-21T14:41:18.1843809Z","Exception":null},{"Reason":"Missing connectionstring key","Created":"2020-03-21T14:46:35.5750609Z","Exception":null},{"Reason":"Missing connectionstring key","Created":"2020-03-21T15:11:44.219736Z","Exception":null}]}},{"ErrorCount":7,"Status":"Warning","LastCheckTime":"2020-03-21T15:16:08","ErrorList":{"Entries":[{"Reason":"Missing connectionstring key","Created":"2020-03-21T14:41:20.6816244Z","Exception":null},{"Reason":"Object reference not set to an instance of an object.","Created":"2020-03-21T14:41:20.6816244Z","Exception":{"ClassName":"System.NullReferenceException","Message":"Object reference not set to an instance of an object.","Data":null,"InnerException":null,"HelpURL":null,"StackTraceString":"   at Healthcheck.Service.Domain.DatabaseHealthCheck.RunHealthcheck()","RemoteStackTraceString":null,"RemoteStackIndex":0,"ExceptionMethod":null,"HResult":-2147467261,"Source":"Healthcheck.Service","WatsonBuckets":null}},{"Reason":"Missing connectionstring key","Created":"2020-03-21T14:46:36.4661007Z","Exception":null},{"Reason":"Object reference not set to an instance of an object.","Created":"2020-03-21T14:46:36.4667677Z","Exception":{"ClassName":"System.NullReferenceException","Message":"Object reference not set to an instance of an object.","Data":null,"InnerException":null,"HelpURL":null,"StackTraceString":"   at Healthcheck.Service.Domain.DatabaseHealthCheck.RunHealthcheck()","RemoteStackTraceString":null,"RemoteStackIndex":0,"ExceptionMethod":null,"HResult":-2147467261,"Source":"Healthcheck.Service","WatsonBuckets":null}},{"Reason":"Missing connectionstring key","Created":"2020-03-21T15:11:44.5870921Z","Exception":null},{"Reason":"Object reference not set to an instance of an object.","Created":"2020-03-21T15:11:44.5870921Z","Exception":{"ClassName":"System.NullReferenceException","Message":"Object reference not set to an instance of an object.","Data":null,"InnerException":null,"HelpURL":null,"StackTraceString":"   at Healthcheck.Service.Domain.DatabaseHealthCheck.RunHealthcheck()","RemoteStackTraceString":null,"RemoteStackIndex":0,"ExceptionMethod":null,"HResult":-2147467261,"Source":"Healthcheck.Service","WatsonBuckets":null}},{"Reason":"Cannot find the connectionstring in the config","Created":"2020-03-21T15:16:08.9047014Z","Exception":null}]}}]},{"GroupName":"Items","Components":[]},{"GroupName":"Search Indexes","Components":[]},{"GroupName":"Xdb","Components":[]}]);
  },
  'GET /sitecore/api/ssc/healthcheck/component': function (req, res) {
    res.json({"Id":"1","Name":"Database","ErrorCount":1,"Status":"Warning","LastCheckTime":"0001-01-01T00:00:00","ErrorList":{"Entries":[]}});
  },
  'GET /sitecore/api/ssc/healthcheck/appinfo': function (req, res) {
    res.json({"IsAdministrator":true, "MemoryUsage": "546 MB"});
  }
};
